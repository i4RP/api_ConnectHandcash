import{PrivateKey as k}from"bsv-wasm";import x from"crypto";import E from"axios";import{PrivateKey as R}from"bsv-wasm";import{nanoid as w}from"nanoid";var h=class extends Error{message;path;method;httpStatusCode;info;constructor(e){super(e.message),this.method=e.method,this.path=e.path,this.httpStatusCode=e.httpStatusCode,this.message=e.message,this.info=e.info,this.stack=e.stack}toString(){return JSON.stringify(this)}};var i=class n{privateKey;appSecret;appId;baseApiEndpoint;baseTrustholderEndpoint;constructor({authToken:e,appSecret:t,appId:r,baseApiEndpoint:s,baseTrustholderEndpoint:a}){if(e)try{this.privateKey=R.from_hex(e)}catch{throw Error("Invalid authToken")}if(!r)throw Error("Missing appId");this.appSecret=t,this.appId=r,this.baseApiEndpoint=s,this.baseTrustholderEndpoint=a}getRequest(e,t,r={},s={}){let a=new Date().toISOString(),o=w(),m=JSON.stringify(r)==="{}"?"":JSON.stringify(r),C=n.getEncodedEndpoint(t,s),d={"app-id":this.appId,...this.appSecret&&{"app-secret":this.appSecret},consumer:"connect-sdk"};if(this.privateKey){let I=this.privateKey.to_public_key();d["oauth-publickey"]=I.to_hex(),d["oauth-timestamp"]=a.toString(),d["oauth-nonce"]=o,d["oauth-signature"]=n.getRequestSignature(e,C,m,a,this.privateKey,o)}return{baseURL:this.baseApiEndpoint,url:C,method:e,headers:d,data:m,responseType:"json"}}getTrustholderRequest(e,t,r,s={}){let a=n.getEncodedEndpoint(t,s);return{baseURL:this.baseTrustholderEndpoint,url:a,method:e,headers:{},data:r,responseType:"json"}}static getEncodedEndpoint(e,t){return E.getUri({url:e,params:t})}static getRequestSignature(e,t,r,s,a,o){let m=n.getRequestSignaturePayload(e,t,r,s,o);return a.sign_message(Buffer.from(m)).to_der_hex()}static getRequestSignaturePayload(e,t,r,s,a){return`${e}
${t}
${s}
${r}${a?`
${a}`:""}`}async getCurrentProfile(){let e=this.getRequest("GET","/v1/connect/profile/currentUserProfile");return n.handleRequest(e,new Error().stack)}async getPublicProfilesByHandle(e){let t=e.map((s,a)=>[`aliases[${a}]`,s]),r=this.getRequest("GET","/v1/connect/profile/publicUserProfiles",{},{...Object.fromEntries(t)});return n.handleRequest(r,new Error().stack)}async getUserPermissions(){let e=this.getRequest("GET","/v1/connect/profile/permissions");return n.handleRequest(e,new Error().stack)}async getEncryptionKeypair(e){let t=this.getRequest("GET","/v1/connect/profile/encryptionKeypair",{},{encryptionPublicKey:e});return n.handleRequest(t,new Error().stack)}async signData(e){let t=this.getRequest("POST","/v1/connect/profile/signData",{format:e.format,value:e.value});return n.handleRequest(t,new Error().stack)}async getUserFriends(){let e=this.getRequest("GET","/v1/connect/profile/friends");return n.handleRequest(e,new Error().stack)}async getSpendableBalance(e){let t=this.getRequest("GET","/v1/connect/wallet/spendableBalance",{},e?{currencyCode:e}:{});return n.handleRequest(t,new Error().stack)}async getTotalBalance(){let e=this.getRequest("GET","/v1/connect/wallet/balance");return n.handleRequest(e,new Error().stack)}async pay(e){let t=this.getRequest("POST","/v1/connect/wallet/pay",{description:e.description,appAction:e.appAction,receivers:e.payments,attachment:e.attachment});return n.handleRequest(t,new Error().stack)}async payPaymentRequest(e){let t=this.getRequest("POST","/v3/wallet/transactions/send/paymentRequest",{paymentRequestId:e});return n.handleRequest(t,new Error().stack)}async getPayment(e){let t=this.getRequest("GET","/v1/connect/wallet/payment",{},{transactionId:e});return n.handleRequest(t,new Error().stack)}async getExchangeRate(e){let t=this.getRequest("GET",`/v1/connect/wallet/exchangeRate/${e}`);return n.handleRequest(t,new Error().stack)}async pursePay(e,t){let r=this.getRequest("POST","/v1/connect/runExtension/purse/pay",{rawTransaction:e,inputParents:t});return n.handleRequest(r,new Error().stack)}async purseBroadcast(e){let t=this.getRequest("POST","/v1/connect/runExtension/purse/broadcast",{rawTransaction:e});return n.handleRequest(t,new Error().stack)}async ownerNextAddress(e){let t=this.getRequest("GET","/v1/connect/runExtension/owner/next",{},{alias:e});return n.handleRequest(t,new Error().stack)}async ownerSign(e,t,r){let s=this.getRequest("POST","/v1/connect/runExtension/owner/sign",{rawTransaction:e,inputParents:t,locks:r});return n.handleRequest(s,new Error().stack)}async getNftLocations(){let e=this.getRequest("GET","/v1/connect/runExtension/owner/nftLocations");return n.handleRequest(e,new Error().stack)}async requestEmailCode(e,t){let r=this.getRequest("POST","/v1/connect/account/requestEmailCode",{email:e,customEmailParameters:t});return(await n.handleRequest(r,new Error().stack)).requestId.requestId}async verifyEmailCode(e,t,r){let s=this.getTrustholderRequest("POST","/auth/verifyCode",{requestId:e,verificationCode:t,publicKey:r});return n.handleRequest(s,new Error().stack)}async createNewAccount(e,t,r){let s=this.getRequest("POST","/v1/connect/account",{accessPublicKey:e,email:t,referrerAlias:r});return n.handleRequest(s,new Error().stack)}async getItemsInventory(e){let t=this.getRequest("POST","/v3/wallet/items/inventory",e);return n.handleRequest(t,new Error().stack)}async getItemListings(e){let t={...e,onlyUserListings:!0},r=this.getRequest("POST","/v3/itemListing/list",t);return n.handleRequest(r,new Error().stack)}async createOrder(e){let t=this.getRequest("POST","/v3/itemCreationOrder",e);return n.handleRequest(t,new Error().stack)}async getCreateItemsOrder(e){let t=this.getRequest("GET",`/v3/itemCreationOrder/${e}`);return n.handleRequest(t,new Error().stack)}async getItemsByOrder(e){let t=this.getRequest("GET",`/v3/itemCreationOrder/${e}/items`);return n.handleRequest(t,new Error().stack)}async addOrderItems({orderId:e,items:t,itemCreationOrderType:r}){let s=this.getRequest("POST",`/v3/itemCreationOrder/${e}/add`,{items:t,itemCreationOrderType:r});return n.handleRequest(s,new Error().stack)}async create(e){let t=this.getRequest("POST","/v3/itemCreationOrder/issueItems",e);return n.handleRequest(t,new Error().stack)}async commitOrder(e){let t=this.getRequest("POST",`/v3/itemCreationOrder/${e}/commit`);return n.handleRequest(t,new Error().stack)}async inscribeNextBatch(e){let t=this.getRequest("POST","/v3/itemCreationOrder/createBatch",{itemCreationOrderId:e});return n.handleRequest(t,new Error().stack)}async transferItems(e){let t=this.getRequest("POST","/v3/wallet/items/send",e);return n.handleRequest(t,new Error().stack)}static async handleRequest(e,t){try{return(await E(e)).data}catch(r){throw n.handleApiError({...r,stack:t})}}static handleApiError(e){return e instanceof Error?e:new h({method:e.request.method,path:e.request.path,httpStatusCode:e.response.status,message:e.response.data.message,info:e.response.data.info,stack:e.stack})}};var u=class{handCashConnectService;constructor(e){this.handCashConnectService=e}async getSpendableBalance(e){return this.handCashConnectService.getSpendableBalance(e)}async getTotalBalance(){return this.handCashConnectService.getTotalBalance()}async pay(e){return this.handCashConnectService.pay(e)}async getPayment(e){return this.handCashConnectService.getPayment(e)}async getExchangeRate(e){return this.handCashConnectService.getExchangeRate(e)}};import{PrivateKey as T,ECIES as S,ECIESCiphertext as q,PublicKey as O}from"bsv-wasm";var p=class{handCashConnectService;constructor(e){this.handCashConnectService=e}async getCurrentProfile(){return this.handCashConnectService.getCurrentProfile()}async getPublicProfilesByHandle(e){return this.handCashConnectService.getPublicProfilesByHandle(e).then(t=>t.items)}async getFriends(){return this.handCashConnectService.getUserFriends().then(e=>e.items)}async getPermissions(){return this.handCashConnectService.getUserPermissions().then(e=>e.items)}async getPermissionsInfo(){return this.handCashConnectService.getUserPermissions().then(e=>e)}async getEncryptionKeypair(){let e=T.from_random(),t=await this.handCashConnectService.getEncryptionKeypair(e.to_public_key().to_hex()),r=O.from_hex(t.senderPublicKeyHex);return{publicKey:Buffer.from(S.decrypt(q.from_bytes(Buffer.from(t.encryptedPublicKeyHex,"hex"),!0),e,r)).toString(),privateKey:Buffer.from(S.decrypt(q.from_bytes(Buffer.from(t.encryptedPrivateKeyHex,"hex"),!0),e,r)).toString()}}async signData(e){return this.handCashConnectService.signData(e)}};var l=class{handCashConnectService;constructor(e){this.handCashConnectService=e}async getItemsInventory(e){return this.handCashConnectService.getItemsInventory(e).then(t=>t.items)}async getItemListings(e){return this.handCashConnectService.getItemListings(e).then(t=>t.items)}async transfer(e){return this.handCashConnectService.transferItems(e)}};var g=class n{wallet;profile;items;constructor(e,t,r){this.wallet=e,this.profile=t,this.items=r}static fromAuthToken({authToken:e,appSecret:t,appId:r,baseApiEndpoint:s,baseTrustholderEndpoint:a}){if(!t)throw Error("Missing appSecret");let o=new i({authToken:e,baseApiEndpoint:s,baseTrustholderEndpoint:a,appSecret:t,appId:r}),m=new u(o),C=new p(o),d=new l(o);return new n(m,C,d)}};var b={prod:{apiEndpoint:"https://cloud.handcash.io",clientUrl:"https://app.handcash.io",trustholderEndpoint:"https://trust.hastearcade.com",cloudinary:{apiKey:"544588249773336",cloudName:"hn8pdtayf",uploadPreset:"ml_items"}},beta:{apiEndpoint:"https://beta-cloud.handcash.io",clientUrl:"https://beta-app.handcash.io",trustholderEndpoint:"https://trust.dev.hastearcade.com",cloudinary:{apiKey:"882244126343337",cloudName:"handcash-iae",uploadPreset:"ml_items"}},iae:{apiEndpoint:"https://iae.cloud.handcash.io",clientUrl:"https://iae-app.handcash.io",trustholderEndpoint:"http://trustholder-service-iae.us-east-1.elasticbeanstalk.com",cloudinary:{apiKey:"882244126343337",cloudName:"handcash-iae",uploadPreset:"ml_items"}}},c=b;var P=class{appId;appSecret;handCashConnectService;env;constructor({appId:e,appSecret:t,env:r=c.prod}){this.appId=e,this.appSecret=t,this.env=r,this.handCashConnectService=new i({appId:this.appId,appSecret:this.appSecret,baseApiEndpoint:this.env.apiEndpoint,baseTrustholderEndpoint:this.env.trustholderEndpoint})}getRedirectionUrl(e={}){e.appId=this.appId;let t=Object.entries(e).map(([r,s])=>`${encodeURIComponent(r)}=${encodeURIComponent(s.toString())}`).join("&");return`${this.env.clientUrl}/#/authorizeApp?${t}`}getChangeSpendLimitsUrl(e){return`${this.env.clientUrl}/#/settings/spendLimits`+(e?`?redirectUrl=${e}`:"")}generateAuthenticationKeyPair=()=>{let e=k.from_random(),t=e.to_public_key();return{privateKey:e.to_hex(),publicKey:t.to_hex()}};requestEmailCode(e,t){return this.handCashConnectService.requestEmailCode(e,t)}verifyEmailCode(e,t,r){return this.handCashConnectService.verifyEmailCode(e,t,r)}createNewAccount(e,t,r){return this.handCashConnectService.createNewAccount(e,t,r)}getAccountFromAuthToken(e){return g.fromAuthToken({authToken:e,appSecret:this.appSecret,appId:this.appId,baseApiEndpoint:this.env.apiEndpoint,baseTrustholderEndpoint:this.env.trustholderEndpoint})}getWebhookEvent=(e,t)=>{if(!e)throw new Error("No signature provided");let r=new Date(new Date().getTime()-5*6e4);if(new Date(t.created)<r)throw new Error("Timestamp is too old");let s=x.createHmac("sha256",this.appSecret);if(s.update(JSON.stringify(t)),s.digest("hex")!==e)throw new Error("Invalid signature");switch(t.event){case"item_listing_payment_completed":return t;case"items_transferred":return t;default:throw new Error(`Unknown event type: ${t.event}`)}}};var y=class n{handCashConnectService;constructor(e){this.handCashConnectService=e}static fromAuthToken(e,t=c.prod,r="",s=""){let a=new i({authToken:e,baseApiEndpoint:t.apiEndpoint,baseTrustholderEndpoint:t.trustholderEndpoint,appSecret:r,appId:s});return new n(a)}async pay(e,t){return(await this.handCashConnectService.pursePay(e,t)).partiallySignedTx}async broadcast(e){await this.handCashConnectService.purseBroadcast(e)}};var f=class n{handCashConnectService;constructor(e){this.handCashConnectService=e}static fromAuthToken(e,t=c.prod,r="",s=""){let a=new i({authToken:e,baseApiEndpoint:t.apiEndpoint,baseTrustholderEndpoint:t.trustholderEndpoint,appSecret:r,appId:s});return new n(a)}async nextOwner(e){return(await this.handCashConnectService.ownerNextAddress(e)).ownerAddress}async sign(e,t,r){return(await this.handCashConnectService.ownerSign(e,t,r)).signedTransaction}async getNftLocations(){return(await this.handCashConnectService.getNftLocations()).nftLocations}};var v=class n{handCashConnectService;static fromAppCredentials(e){let t=e.env||c.prod;return new n({handCashConnectService:new i({appId:e.appId,appSecret:"",authToken:e.authToken,baseApiEndpoint:t.apiEndpoint,baseTrustholderEndpoint:t.trustholderEndpoint})})}constructor({handCashConnectService:e}){this.handCashConnectService=e}async createItemsOrder(e){return this.handCashConnectService.create({items:e.items,itemCreationOrderType:"collectionItem",referencedCollection:e.collectionId})}async createCollectionOrder(e){return this.handCashConnectService.create({items:[e],itemCreationOrderType:"collection"})}createCollectionItemsOrder(e){return this.handCashConnectService.createOrder({items:[],itemCreationOrderType:"collectionItem",referencedCollection:e})}async addOrderItems(e){return this.handCashConnectService.addOrderItems(e)}commitOrder(e){return this.handCashConnectService.commitOrder(e)}inscribeNextBatch(e){return this.handCashConnectService.inscribeNextBatch(e)}getOrder(e){return this.handCashConnectService.getCreateItemsOrder(e)}getOrderItems(e){return this.handCashConnectService.getItemsByOrder(e).then(t=>t.items)}payPaymentRequest(e){return this.handCashConnectService.payPaymentRequest(e)}};var A={};var ve={Pay:"PAY",UserPublicProfile:"USER_PUBLIC_PROFILE",UserPrivateProfile:"USER_PRIVATE_PROFILE",Friends:"FRIENDS",Decryption:"DECRYPTION",SignData:"SIGN_DATA",ReadBalance:"READ_BALANCE"};export{c as Environments,P as HandCashConnect,h as HandCashConnectApiError,v as HandCashMinter,f as HandCashOwner,y as HandCashPurse,ve as Permissions,A as Types};
